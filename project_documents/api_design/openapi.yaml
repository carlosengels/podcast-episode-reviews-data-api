openapi: 3.0.0
info:
  title: Noobz Podcast Review Service
  version: 0.0.1
paths:
  /reviews/{episodeId}/:
    get:
      summary: Gets all reviews for a given episode ID.
      parameters:
      - name: episodeId
        in: path
        description: Episode ID
        required: true
        schema:
          type: string
          example: "123AS"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Review"
        '404':
          description: Episode ID not found
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"
    post:
      summary: Adds a review for a given episodeId.
      parameters:
      - name: episodeId
        in: path
        description: Adds a review for a given episode ID.
        required: true
        schema:
          type: string
          example: 25
      responses:
        '201':
          description: OK. Episode added.
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"
        '404':
          description: Episode ID not found.
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"
          
  /episodes/toprated/:
    get:
      summary: Get the highest rated episodes.
      parameters:
        - name: count
          in: query
          description: Amount of episodes to be retrieved
          required: false
          schema:
            type: string
            example: 10
        - name: podcast
          in: query
          required: false
          schema:
            type: string
            example: "darknetdiaries"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Episode"
        '404':
          description: User error.
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"
                  
  /episodes/:
    post:
      summary: Adds an episode to the database
      requestBody:
        content:
          application/json:
            schema:
              "$ref" : "#/components/schemas/Episode"
      responses:
        '201':
          description: OK. Episde Added.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Episode"
        '404':
          description: User error. Does the episode already exist?
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                items:
                  "$ref": "#/components/schemas/Error"

components:
  schemas:
    Review:
      type: object
      properties:
        reviewId:
          type: string
        reviewTitle:
          type: string
        rating:
          type: integer
          format: int32
        postedBy:
          type: string
        comment:
          type: string
        episodeId:
          type: string
    Episode:
      type: object
      properties:
        podcast:
          type: string
        episodeNr:
          type: integer
        name:
          type: string
        episodeId:
          type: integer
        avgRating:
          type: integer
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string